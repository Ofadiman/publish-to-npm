name: CI/CD

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  main:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: 7.29.0
      - name: Setup node
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18.12.1
          cache: pnpm
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Check formatting
        run: pnpm check:formatting
      - name: Check types
        run: pnpm check:types
      - name: Run tests
        run: pnpm test
      - name: Build
        run: pnpm build
      - name: Setup npmrc
        run: |
          pnpm config set access public --location project
          pnpm config set //registry.npmjs.org/:_authToken ${{ secrets.NPM_TOKEN }} --location project
      - name: Create version
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          pnpm changeset version
      - name: Add files and commit changes
        run: |
          git add .
          git commit -m "chore: generate changelog\n\n[skip ci]"
      - name: Push changes
        run: git push origin main
      - name: Publish to NPM
        run: pnpm publish -r --report-summary
      - name: Debug files in cwd
        run: ls -lrt
      - name: Debug changesets output
        run: cat pnpm-publish-summary.json
      - name: Create slack message
        id: create_slack_message
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs')

            const publishSummary = JSON.parse(
              fs.readFileSync('./pnpm-publish-summary.json', { encoding: 'utf8' }),
            )

            if (publishSummary.publishedPackages.length === 0) {
              core.info('There are no packages to publish.')
              core.setOutput('should_send', false)
              process.exit(0)
            }

            let message = '*Successfully published*\n```'
            publishSummary.publishedPackages.forEach((publishedPackage) => {
              message += `  - ${publishedPackage.name}@${publishedPackage.version}\n`
            })
            message += '```'

            core.info(message)

            core.setOutput('should_send', true)
            core.setOutput('message', message)
      - name: Send slack message
        if: ${{ steps.create_slack_message.outputs.should_send }}
        uses: slackapi/slack-github-action@v1.23.0
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        with:
          channel-id: C023PKSN2Q7
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "${{ steps.create_slack_message.outputs.message }}"
                  }
                }
              ]
            }
