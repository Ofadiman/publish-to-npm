name: CI/CD

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  main:
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: 7.29.0

      - name: Setup node
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18.12.1
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test

      - name: Check formatting
        run: pnpm check:formatting

      - name: Check types
        run: pnpm check:types

      - name: Build
        run: pnpm build

      - name: Changeset status
        run: pnpm changeset status --output changeset-status.json

      - name: Find out if there is something to publish
        id: should_publish
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs')

            const changesetStatus = JSON.parse(fs.readFileSync('./changeset-status.json', { encoding: 'utf8' }))
            core.info(JSON.stringify(changesetStatus))

            if (changesetStatus.releases.length === 0) {
              core.setOutput('value', 'false')
            } else {
              core.setOutput('value', 'true')
            }

      - name: Configure git
        if: ${{ steps.should_publish.outputs.value == 'true' }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Generate changelog
        if: ${{ steps.should_publish.outputs.value == 'true' }}
        run: pnpm changeset version

      - name: Setup .npmrc
        if: ${{ steps.should_publish.outputs.value == 'true' }}
        run: |
          pnpm config set access public --location project
          pnpm config set //registry.npmjs.org/:_authToken ${{ secrets.NPM_TOKEN }} --location project
          pnpm config set ignore-scripts 'true' --location project

      - name: Add files, commit changes and push to remote repository
        if: ${{ steps.should_publish.outputs.value == 'true' }}
        run: |
          git add .
          git commit -m "chore: generate changelog" -m "" -m "" -m "[skip ci]"
          git push origin main

      - name: Publish to NPM
        if: ${{ steps.should_publish.outputs.value == 'true' }}
        run: pnpm publish -r --report-summary

      - name: Create slack message
        if: ${{ steps.should_publish.outputs.value == 'true' }}
        id: create_slack_message
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs')

            const publishSummary = JSON.parse(
              fs.readFileSync('./pnpm-publish-summary.json', { encoding: 'utf8' }),
            )

            let message = '*Successfully published*\n```\n'
            publishSummary.publishedPackages.forEach((publishedPackage) => {
              message += `- ${publishedPackage.name}@${publishedPackage.version}\n`
            })
            message += '```'

            core.info(message)

            core.setOutput('message', message)

      - name: Send slack message
        if: ${{ steps.should_publish.outputs.value == 'true' }}
        uses: slackapi/slack-github-action@v1.23.0
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ${{ toJson(steps.create_slack_message.outputs.message) }}
                  }
                }
              ]
            }
